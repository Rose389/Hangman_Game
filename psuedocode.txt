HANGMAN

the Obective:
	to guess a random word, one letter at a time, with a limited number of guesses.

The Setup:
	the computer chooses a word, and displays an _ for each letter in the word.

The Rules:
	*player guesses a letter
	*if it is correct, computer fills in the corresponding _(s)
	*if it is incorrect, the computer places the letter below the board and decreases the guesses remaining by one.

How to win:
	the player must fill in all the _ with the correct letters within the timeframe/#of guesses.


Coding the game:

*I need an array of words the computer can choose.
*I need code to 'get' a random word from the list
* I need the computer to count the number of letters in the word chosen and put that many _ on the board.
*I need a counter for wins
* I need a counter for losses
* I need an event listener to know which letter the player typed.
* I need cod3e to clear the board and choose another word.
* this sounds like a series of if else statements within a loop or two.


HTML

header: with game title and optional subtitle

div: for the score wins vs losses
	javascript or jquery for the counters

button: to start game

div: for the word
	js or jquery to change the innerHTML

div: for the incorrect letters

div: for the WINNER image

div: for the "hangman"
	code for each image to appear with an incorrect letter


DETAILED

Title: Hangman
subtitle: we're going old school!

Score: (+100 points/correct letter & -25 points/wrong letter)

left half of screen has a picture 			right half of the screen
of an empty gallows from 					has the playing board
(the Mummy, Pirates, or doctor who)			(use a handwriting font for the letters)

footer has a copyright statement that I created the game, and a disclaimer for the copyrighted material that I am not making any money on my school project.


js/jquery

variables needed
	winsCounter
	lossesCounter


on button click start the game
	grab word from array
	count letters and print # of _
	wait for event listener of keys

When key is pressed
	check to see if letter is in word
	if in word place in correct location else put in wrong letter section
	repeat until # of guesses === 0 OR word is completely filled in

if # guesses reaches 0 with word incomplete, put TRY AGAIN? on the screen

if word completed show corresponding image.
